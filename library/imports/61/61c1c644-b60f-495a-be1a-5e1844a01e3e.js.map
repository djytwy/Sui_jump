{"version":3,"sources":["assets/scripts/ScoreOvertake.js"],"names":["UtilsFB","require","cc","Class","Component","properties","overtakeLabel","type","Label","photo","Sprite","animation","Animation","onLoad","on","onPlayFinished","init","mgr","play","setPlayerInfo","playerInfo","isSelf","string","playerName","getPlayerPhotoAsync","then","photoTexture","spriteFrame","SpriteFrame","setTexture","bind","error","state","despawn"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACAC,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAC,aAAa,EAAE;MACX,WAAS,IADE;MAEXC,IAAI,EAAEL,EAAE,CAACM;IAFE,CAjBP;IAsBRC,KAAK,EAAE;MACH,WAAS,IADN;MAEHF,IAAI,EAAEL,EAAE,CAACQ;IAFN,CAtBC;IA2BRC,SAAS,EAAE;MACP,WAAS,IADF;MAEPJ,IAAI,EAAEL,EAAE,CAACU;IAFF;EA3BH,CAHP;EAoCLC,MAAM,EAAE,kBAAW;IACf,KAAKF,SAAL,CAAeG,EAAf,CAAkB,UAAlB,EAA8B,KAAKC,cAAnC,EAAmD,IAAnD;EACH,CAtCI;EAwCLC,IAAI,EAAE,cAASC,GAAT,EAAc;IAChB,KAAKA,GAAL,GAAWA,GAAX;EACH,CA1CI;EA4CLC,IAAI,EAAE,gBAAW;IACb,KAAKP,SAAL,CAAeO,IAAf,CAAoB,eAApB;EACH,CA9CI;EAgDLC,aAAa,EAAE,uBAASC,UAAT,EAAqB;IAChC,IAAIA,UAAU,CAACC,MAAf,EAAuB;MACnB,KAAKf,aAAL,CAAmBgB,MAAnB,GAA4B,aAA5B;IACH,CAFD,MAEO;MACH,KAAKhB,aAAL,CAAmBgB,MAAnB,GAA4B,cAAcF,UAAU,CAACG,UAArD;IACH;;IAEDvB,OAAO,CAACwB,mBAAR,CAA4BJ,UAA5B,EACCK,IADD,CACM,YAAW;MACb,IAAIL,UAAU,CAACM,YAAX,IAA2B,IAA/B,EAAqC;QACjC,KAAKjB,KAAL,CAAWkB,WAAX,GAAyB,IAAIzB,EAAE,CAAC0B,WAAP,EAAzB;QACA,KAAKnB,KAAL,CAAWkB,WAAX,CAAuBE,UAAvB,CAAkCT,UAAU,CAACM,YAA7C;MACH;IACJ,CALK,CAKJI,IALI,CAKC,IALD,CADN,WAOO,UAAAC,KAAK,EAAI,CAAE,CAPlB;EASH,CAhEI;EAkELhB,cAAc,EAAE,wBAASR,IAAT,EAAeyB,KAAf,EAAsB;IAClC,KAAKf,GAAL,CAASgB,OAAT,CAAiB,IAAjB;EACH;AApEI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nvar UtilsFB = require(\"UtilsFB\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n\n        overtakeLabel: {\n            default: null,\n            type: cc.Label,\n        },\n\n        photo: {\n            default: null,\n            type: cc.Sprite,\n        },\n\n        animation: {\n            default: null,\n            type: cc.Animation,\n        },\n    },\n\n    onLoad: function() {\n        this.animation.on('finished', this.onPlayFinished, this);\n    },\n\n    init: function(mgr) {\n        this.mgr = mgr;\n    },\n\n    play: function() {\n        this.animation.play('overtake_fade');\n    },\n\n    setPlayerInfo: function(playerInfo) {\n        if (playerInfo.isSelf) {\n            this.overtakeLabel.string = \"New revord!\";\n        } else {\n            this.overtakeLabel.string = \"Overtake \" + playerInfo.playerName;\n        }\n\n        UtilsFB.getPlayerPhotoAsync(playerInfo)\n        .then(function() {\n            if (playerInfo.photoTexture != null) {\n                this.photo.spriteFrame = new cc.SpriteFrame();\n                this.photo.spriteFrame.setTexture(playerInfo.photoTexture);\n            }\n        }.bind(this))\n        .catch(error => {});\n\n    },\n\n    onPlayFinished: function(type, state) {\n        this.mgr.despawn(this);\n    },\n});\n"]}