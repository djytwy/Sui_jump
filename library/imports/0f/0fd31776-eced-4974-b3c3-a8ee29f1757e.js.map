{"version":3,"sources":["assets/scripts/game_scene.js"],"names":["UtilsFB","require","UtilsCommon","SkinMgr","ScreenMgr","leaderboardScore","game_scene","cc","Class","Component","properties","player","type","Node","block_prefab","Prefab","block_root","left_org","v2","map_root","y_radio","checkout","scoreFXMgr","scoreOvertakeMgr","scoreLabel","Label","hintControlLabel","btnShare","screenLeaderboard","playerSkinSprite","Sprite","statics","instance","onLoad","mapMoving","isGameOver","gaming","mapRootInitPos","getPosition","score","player_com","getComponent","playerArray","currentSkinIndex","start","init","onGameStart","showLabelScore","holdScore","setPosition","removeAllChildren","updateScoreDisplay","active","direction","cur_block","instantiate","Math","floor","random","addChild","convertToNodeSpaceAR","w_pos","getChildByName","convertToWorldSpaceAR","next_block","block_zorder","add_block","node","zIndex","x_distance","y_distance","next_pos","x","y","set_next_block","i","childrenCount","destroyOutBlock","children","blockNode","block","blockPosWorld","parent","gamePosWorld","distance","sub","minDistanceX","width","minDistanceY","height","abs","destroy","move_map","offset_x","offset_y","m1","moveBy","end_func","callFunc","bind","seq","sequence","runAction","on_checkout_game","showScreen","gainScore","posWorld","playScoreFX","playerOvertaken","getPlayerInfoScoreOvertake","length","play","string","onShowLeaderboard","showLeaderboard","onShare","imageBase64","getScreenshotBase64","getCameraMain","chooseAsync","error","onSkinChange","skinIndex","spriteFrame","getSkinSpriteFrame"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMI,gBAAgB,GAAG,aAAzB;AACA,IAAIC,UAAU,GAAGC,EAAE,CAACC,KAAH,CAAS;EACtB,WAASD,EAAE,CAACE,SADU;EAGtBC,UAAU,EAAE;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,MAAM,EAAE;MACJC,IAAI,EAAEL,EAAE,CAACM,IADL;MAEJ,WAAS;IAFL,CAhBA;IAqBRC,YAAY,EAAE;MACV,WAAS,EADC;MAEVF,IAAI,EAAEL,EAAE,CAACQ;IAFC,CArBN;IA0BRC,UAAU,EAAE;MACRJ,IAAI,EAAEL,EAAE,CAACM,IADD;MAER,WAAS;IAFD,CA1BJ;IA+BRI,QAAQ,EAAEV,EAAE,CAACW,EAAH,CAAM,CAAN,EAAS,CAAT,CA/BF;IAiCRC,QAAQ,EAAE;MACNP,IAAI,EAAEL,EAAE,CAACM,IADH;MAEN,WAAS;IAFH,CAjCF;IAsCRO,OAAO,EAAE,SAtCD;IAwCRC,QAAQ,EAAE;MACNT,IAAI,EAAEL,EAAE,CAACM,IADH;MAEN,WAAS;IAFH,CAxCF;IA6CRS,UAAU,EAAE;MACR,WAAS,IADD;MAERV,IAAI,EAAEX,OAAO,CAAC,YAAD;IAFL,CA7CJ;IAkDRsB,gBAAgB,EAAE;MACd,WAAS,IADK;MAEdX,IAAI,EAAEX,OAAO,CAAC,kBAAD;IAFC,CAlDV;IAuDRuB,UAAU,EAAE;MACR,WAAS,IADD;MAERZ,IAAI,EAAEL,EAAE,CAACkB;IAFD,CAvDJ;IA4DRC,gBAAgB,EAAE;MACd,WAAS,IADK;MAEdd,IAAI,EAAEL,EAAE,CAACkB;IAFK,CA5DV;IAiERE,QAAQ,EAAE;MACN,WAAS,IADH;MAENf,IAAI,EAAEL,EAAE,CAACM;IAFH,CAjEF;IAsERe,iBAAiB,EAAE;MACf,WAAS,IADM;MAEfhB,IAAI,EAAEX,OAAO,CAAC,mBAAD;IAFE,CAtEX;IA2ER4B,gBAAgB,EAAE;MACd,WAAS,IADK;MAEdjB,IAAI,EAAEL,EAAE,CAACuB;IAFK;EA3EV,CAHU;EAoFtBC,OAAO,EAAE;IACLC,QAAQ,EAAE;EADL,CApFa;EAwFtB;EAEAC,MA1FsB,oBA0Fb;IACL3B,UAAU,CAAC0B,QAAX,GAAsB,IAAtB;IACA,KAAKE,SAAL,GAAiB,KAAjB;IACA,KAAKC,UAAL,GAAkB,IAAlB;IACA,KAAKC,MAAL,GAAc,KAAd;IAEA,KAAKC,cAAL,GAAsB,KAAKlB,QAAL,CAAcmB,WAAd,EAAtB;IACA,KAAKC,KAAL,GAAa,CAAb;IACA,KAAKC,UAAL,GAAkB,KAAK7B,MAAL,CAAY8B,YAAZ,CAAyB,QAAzB,CAAlB;IAEA,KAAKC,WAAL,GAAmB,IAAnB;IAEA,KAAKC,gBAAL,GAAwB,CAAxB;EACH,CAvGqB;EAyGtBC,KAzGsB,mBAyGd;IACJ5C,OAAO,CAAC6C,IAAR,CAAaxC,gBAAb;EACH,CA3GqB;EA6GtByC,WAAW,EAAE,qBAAUC,cAAV,EAA0BC,SAA1B,EAAqC;IAC9C,KAAK7B,QAAL,CAAc8B,WAAd,CAA0B,KAAKZ,cAA/B;IACA,KAAKrB,UAAL,CAAgBkC,iBAAhB,CAAkC,IAAlC;;IACA,IAAI,CAACF,SAAL,EAAgB;MACZ,KAAKT,KAAL,GAAa,CAAb;IACH;;IACD,KAAKY,kBAAL;IACA,KAAK9B,QAAL,CAAc+B,MAAd,GAAuB,KAAvB;IACA,KAAKZ,UAAL,CAAgBa,SAAhB,GAA4B,CAA5B;IAEA,KAAKC,SAAL,GAAiB/C,EAAE,CAACgD,WAAH,CAAe,KAAKzC,YAAL,CAAkB0C,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAlB,CAAf,CAAjB;IACA,KAAK1C,UAAL,CAAgB2C,QAAhB,CAAyB,KAAKL,SAA9B;IACA,KAAKA,SAAL,CAAeL,WAAf,CAA2B,KAAKjC,UAAL,CAAgB4C,oBAAhB,CAAqC,KAAK3C,QAA1C,CAA3B;IAEA,IAAI4C,KAAK,GAAG,KAAKP,SAAL,CAAeQ,cAAf,CAA8B,KAA9B,EAAqCC,qBAArC,CAA2DxD,EAAE,CAACW,EAAH,CAAM,CAAN,EAAS,CAAT,CAA3D,CAAZ;IACA,KAAKP,MAAL,CAAYsC,WAAZ,CAAwB,KAAK9B,QAAL,CAAcyC,oBAAd,CAAmCC,KAAnC,CAAxB;IACA,KAAKG,UAAL,GAAkB,KAAKV,SAAvB;IACA,KAAKW,YAAL,GAAoB,CAAC,CAArB;IACA,KAAKC,SAAL;IAEA,KAAKnB,cAAL,CAAoBA,cAApB,EApB8C,CAsB9C;;IACA,KAAKZ,UAAL,GAAkB,KAAlB;EACH,CArIqB;EAuItBY,cAAc,EAAE,wBAAUK,MAAV,EAAkB;IAC9B,KAAK5B,UAAL,CAAgB2C,IAAhB,CAAqBf,MAArB,GAA8BA,MAA9B;IACA,KAAK1B,gBAAL,CAAsByC,IAAtB,CAA2Bf,MAA3B,GAAoCA,MAApC;IACA,KAAKzB,QAAL,CAAcyB,MAAd,GAAuBA,MAAvB;EACH,CA3IqB;EA6ItBc,SA7IsB,uBA6IV;IACR,KAAKZ,SAAL,GAAiB,KAAKU,UAAtB;IAEA,KAAKA,UAAL,GAAkBzD,EAAE,CAACgD,WAAH,CAAe,KAAKzC,YAAL,CAAkB0C,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAlB,CAAf,CAAlB;IACA,KAAK1C,UAAL,CAAgB2C,QAAhB,CAAyB,KAAKK,UAA9B,EAJQ,CAKR;;IACA,KAAKA,UAAL,CAAgBI,MAAhB,GAAyB,KAAKH,YAA9B;IACA,KAAKA,YAAL;IAEA,IAAII,UAAU,GAAG,MAAMb,IAAI,CAACE,MAAL,KAAgB,GAAvC;IACA,IAAIY,UAAU,GAAGD,UAAU,GAAG,KAAKjD,OAAnC;IAEA,IAAImD,QAAQ,GAAG,KAAKjB,SAAL,CAAehB,WAAf,EAAf;IACAiC,QAAQ,CAACC,CAAT,IAAeH,UAAU,GAAG,KAAK7B,UAAL,CAAgBa,SAA5C;IACAkB,QAAQ,CAACE,CAAT,IAAcH,UAAd;IACA,KAAKN,UAAL,CAAgBf,WAAhB,CAA4BsB,QAA5B;IAGA,KAAK/B,UAAL,CAAgBkC,cAAhB,CAA+B,KAAKV,UAAL,CAAgBvB,YAAhB,CAA6B,OAA7B,CAA/B,EAlBQ,CAoBR;;IACA,KAAK,IAAIkC,CAAC,GAAG,KAAK3D,UAAL,CAAgB4D,aAAhB,GAAgC,CAA7C,EAAgDD,CAAC,IAAI,CAArD,EAAwDA,CAAC,EAAzD,EAA6D;MACzD,KAAKE,eAAL,CAAqB,KAAK7D,UAAL,CAAgB8D,QAAhB,CAAyBH,CAAzB,CAArB;IACH,CAvBO,CAwBR;;EACH,CAtKqB;EAwKtBE,eAAe,EAAE,yBAAUE,SAAV,EAAqB;IAClC,IAAIC,KAAK,GAAGD,SAAS,CAACtC,YAAV,CAAuB,OAAvB,CAAZ;IACA,IAAIwC,aAAa,GAAGF,SAAS,CAACG,MAAV,CAAiBnB,qBAAjB,CAAuCgB,SAAS,CAACzC,WAAV,EAAvC,CAApB;IACA,IAAI6C,YAAY,GAAG,KAAKhB,IAAL,CAAU7B,WAAV,EAAnB;IACA,IAAI8C,QAAQ,GAAGH,aAAa,CAACI,GAAd,CAAkBF,YAAlB,CAAf;IACA,IAAIG,YAAY,GAAG,KAAKnB,IAAL,CAAUoB,KAAV,GAAkB,CAAlB,GAAsBR,SAAS,CAACQ,KAAV,GAAkB,CAA3D;IACA,IAAIC,YAAY,GAAG,KAAKrB,IAAL,CAAUsB,MAAV,GAAmB,CAAnB,GAAuBV,SAAS,CAACU,MAAV,GAAmB,CAA7D;;IAEA,IAAIjC,IAAI,CAACkC,GAAL,CAASN,QAAQ,CAACZ,CAAlB,IAAuBc,YAAvB,IAAuC9B,IAAI,CAACkC,GAAL,CAASN,QAAQ,CAACX,CAAlB,IAAuBe,YAAlE,EAAgF;MAC5ET,SAAS,CAACY,OAAV;IACH;EACJ,CAnLqB;EAqLtBC,QArLsB,oBAqLbC,QArLa,EAqLHC,QArLG,EAqLO;IACzB,KAAK5D,SAAL,GAAiB,IAAjB;IACA,IAAI6D,EAAE,GAAGxF,EAAE,CAACyF,MAAH,CAAU,GAAV,EAAeH,QAAf,EAAyBC,QAAzB,CAAT;IACA,IAAIG,QAAQ,GAAG1F,EAAE,CAAC2F,QAAH,CAAY,YAAY;MACnC,KAAKhE,SAAL,GAAiB,KAAjB;MACA,KAAKgC,SAAL;IACH,CAH0B,CAGzBiC,IAHyB,CAGpB,IAHoB,CAAZ,CAAf;IAKA,IAAIC,GAAG,GAAG7F,EAAE,CAAC8F,QAAH,CAAY,CAACN,EAAD,EAAKE,QAAL,CAAZ,CAAV;IACA,KAAK9E,QAAL,CAAcmF,SAAd,CAAwBF,GAAxB;EACH,CA/LqB;EAiMtBG,gBAAgB,EAAE,4BAAY;IAC1B,KAAKpE,UAAL,GAAkB,IAAlB;IACA,KAAKY,cAAL,CAAoB,KAApB;IACA3C,SAAS,CAAC4B,QAAV,CAAmBwE,UAAnB,CAA8B,gBAA9B;IACA;EACH,CAtMqB;EAwMtBC,SAAS,EAAE,mBAAUC,QAAV,EAAoBnE,KAApB,EAA2B;IAClC,KAAKA,KAAL,IAAcA,KAAd;IACA,KAAKY,kBAAL;IACA,KAAK7B,UAAL,CAAgBqF,WAAhB,CAA4BD,QAA5B,EAAsCnE,KAAtC;IAEA,IAAIqE,eAAe,GAAG5G,OAAO,CAAC6G,0BAAR,CAAmCxG,gBAAnC,EAAqD,KAAKkC,KAAL,GAAaA,KAAlE,EAAyE,KAAKA,KAA9E,CAAtB;;IACA,IAAIqE,eAAe,CAACE,MAAhB,GAAyB,CAA7B,EAAgC;MAC5B,KAAKvF,gBAAL,CAAsBwF,IAAtB,CAA2BL,QAA3B,EAAqCE,eAArC;IACH;EACJ,CAjNqB;EAmNtBzD,kBAAkB,EAAE,8BAAY;IAC5B,KAAK3B,UAAL,CAAgBwF,MAAhB,GAAyB,YAAY,KAAKzE,KAA1C;EACH,CArNqB;EAuNtB0E,iBAAiB,EAAE,6BAAY;IAC3B,KAAKrF,iBAAL,CAAuBsF,eAAvB,CAAuC7G,gBAAvC;EACH,CAzNqB;EA2NtB8G,OAAO,EAAE,mBAAY;IACjB,IAAIC,WAAW,GAAGlH,WAAW,CAACmH,mBAAZ,CAAgCnH,WAAW,CAACoH,aAAZ,EAAhC,CAAlB;IACAtH,OAAO,CAACuH,WAAR,CAAoBH,WAApB,WAAuC,UAAAI,KAAK,EAAI,CAAG,CAAnD;EACH,CA9NqB;EAgOtBC,YAAY,EAAE,sBAAUC,SAAV,EAAqB;IAC/B,IAAI,KAAK/E,gBAAL,IAAyB+E,SAA7B,EAAwC;MACpC,KAAK/E,gBAAL,GAAwB+E,SAAxB;MACA,KAAK7F,gBAAL,CAAsB8F,WAAtB,GAAoCxH,OAAO,CAAC6B,QAAR,CAAiB4F,kBAAjB,CAAoCF,SAApC,CAApC;IACH;EACJ;AArOqB,CAAT,CAAjB","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\nvar UtilsFB = require(\"UtilsFB\");\r\nvar UtilsCommon = require(\"UtilsCommon\");\r\nvar SkinMgr = require('SkinMgr');\r\nvar ScreenMgr = require('ScreenMgr');\r\nconst leaderboardScore = \"score_world\";\r\nvar game_scene = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        player: {\r\n            type: cc.Node,\r\n            default: null,\r\n        },\r\n\r\n        block_prefab: {\r\n            default: [],\r\n            type: cc.Prefab,\r\n        },\r\n\r\n        block_root: {\r\n            type: cc.Node,\r\n            default: null,\r\n        },\r\n\r\n        left_org: cc.v2(0, 0),\r\n\r\n        map_root: {\r\n            type: cc.Node,\r\n            default: null,\r\n        },\r\n\r\n        y_radio: 0.5560472,\r\n\r\n        checkout: {\r\n            type: cc.Node,\r\n            default: null,\r\n        },\r\n\r\n        scoreFXMgr: {\r\n            default: null,\r\n            type: require('ScoreFXMgr'),\r\n        },\r\n\r\n        scoreOvertakeMgr: {\r\n            default: null,\r\n            type: require('ScoreOvertakeMgr'),\r\n        },\r\n\r\n        scoreLabel: {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n\r\n        hintControlLabel: {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n\r\n        btnShare: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n\r\n        screenLeaderboard: {\r\n            default: null,\r\n            type: require('ScreenLeaderboard'),\r\n        },\r\n\r\n        playerSkinSprite: {\r\n            default: null,\r\n            type: cc.Sprite,\r\n        },\r\n    },\r\n\r\n    statics: {\r\n        instance: null,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        game_scene.instance = this;\r\n        this.mapMoving = false;\r\n        this.isGameOver = true;\r\n        this.gaming = false;\r\n\r\n        this.mapRootInitPos = this.map_root.getPosition();\r\n        this.score = 0;\r\n        this.player_com = this.player.getComponent(\"player\");\r\n\r\n        this.playerArray = null;\r\n\r\n        this.currentSkinIndex = 0;\r\n    },\r\n\r\n    start() {\r\n        UtilsFB.init(leaderboardScore);\r\n    },\r\n\r\n    onGameStart: function (showLabelScore, holdScore) {\r\n        this.map_root.setPosition(this.mapRootInitPos);\r\n        this.block_root.removeAllChildren(true);\r\n        if (!holdScore) {\r\n            this.score = 0;\r\n        }\r\n        this.updateScoreDisplay();\r\n        this.checkout.active = false;\r\n        this.player_com.direction = 1;\r\n\r\n        this.cur_block = cc.instantiate(this.block_prefab[Math.floor(Math.random() * 3)]);\r\n        this.block_root.addChild(this.cur_block);\r\n        this.cur_block.setPosition(this.block_root.convertToNodeSpaceAR(this.left_org));\r\n\r\n        var w_pos = this.cur_block.getChildByName(\"mid\").convertToWorldSpaceAR(cc.v2(0, 0));\r\n        this.player.setPosition(this.map_root.convertToNodeSpaceAR(w_pos));\r\n        this.next_block = this.cur_block;\r\n        this.block_zorder = -1;\r\n        this.add_block();\r\n\r\n        this.showLabelScore(showLabelScore);\r\n\r\n        // UtilsFB.invitePlayerRandomAsync(UtilsCommon.getScreenshotBase64(UtilsCommon.getCameraMain())).catch(error => {});\r\n        this.isGameOver = false;\r\n    },\r\n\r\n    showLabelScore: function (active) {\r\n        this.scoreLabel.node.active = active;\r\n        this.hintControlLabel.node.active = active;\r\n        this.btnShare.active = active;\r\n    },\r\n\r\n    add_block() {\r\n        this.cur_block = this.next_block;\r\n\r\n        this.next_block = cc.instantiate(this.block_prefab[Math.floor(Math.random() * 3)]);\r\n        this.block_root.addChild(this.next_block);\r\n        // this.next_block.setLocalZOrder(this.block_zorder);\r\n        this.next_block.zIndex = this.block_zorder;\r\n        this.block_zorder--;\r\n\r\n        var x_distance = 200 + Math.random() * 200;\r\n        var y_distance = x_distance * this.y_radio;\r\n\r\n        var next_pos = this.cur_block.getPosition();\r\n        next_pos.x += (x_distance * this.player_com.direction);\r\n        next_pos.y += y_distance;\r\n        this.next_block.setPosition(next_pos);\r\n\r\n\r\n        this.player_com.set_next_block(this.next_block.getComponent(\"block\"));\r\n\r\n        // 删除掉没有用的block\r\n        for (let i = this.block_root.childrenCount - 1; i >= 0; i--) {\r\n            this.destroyOutBlock(this.block_root.children[i])\r\n        }\r\n        // end \r\n    },\r\n\r\n    destroyOutBlock: function (blockNode) {\r\n        let block = blockNode.getComponent('block');\r\n        let blockPosWorld = blockNode.parent.convertToWorldSpaceAR(blockNode.getPosition());\r\n        let gamePosWorld = this.node.getPosition();\r\n        let distance = blockPosWorld.sub(gamePosWorld);\r\n        let minDistanceX = this.node.width / 2 + blockNode.width / 2;\r\n        let minDistanceY = this.node.height / 2 + blockNode.height / 2;\r\n\r\n        if (Math.abs(distance.x) > minDistanceX && Math.abs(distance.y) > minDistanceY) {\r\n            blockNode.destroy();\r\n        }\r\n    },\r\n\r\n    move_map(offset_x, offset_y) {\r\n        this.mapMoving = true;\r\n        var m1 = cc.moveBy(0.5, offset_x, offset_y);\r\n        var end_func = cc.callFunc(function () {\r\n            this.mapMoving = false;\r\n            this.add_block();\r\n        }.bind(this));\r\n\r\n        var seq = cc.sequence([m1, end_func]);\r\n        this.map_root.runAction(seq);\r\n    },\r\n\r\n    on_checkout_game: function () {\r\n        this.isGameOver = true;\r\n        this.showLabelScore(false);\r\n        ScreenMgr.instance.showScreen('ScreenGameOver');\r\n        return;\r\n    },\r\n\r\n    gainScore: function (posWorld, score) {\r\n        this.score += score;\r\n        this.updateScoreDisplay();\r\n        this.scoreFXMgr.playScoreFX(posWorld, score);\r\n\r\n        let playerOvertaken = UtilsFB.getPlayerInfoScoreOvertake(leaderboardScore, this.score - score, this.score);\r\n        if (playerOvertaken.length > 0) {\r\n            this.scoreOvertakeMgr.play(posWorld, playerOvertaken);\r\n        }\r\n    },\r\n\r\n    updateScoreDisplay: function () {\r\n        this.scoreLabel.string = \"Score: \" + this.score;\r\n    },\r\n\r\n    onShowLeaderboard: function () {\r\n        this.screenLeaderboard.showLeaderboard(leaderboardScore);\r\n    },\r\n\r\n    onShare: function () {\r\n        var imageBase64 = UtilsCommon.getScreenshotBase64(UtilsCommon.getCameraMain());\r\n        UtilsFB.chooseAsync(imageBase64).catch(error => { });\r\n    },\r\n\r\n    onSkinChange: function (skinIndex) {\r\n        if (this.currentSkinIndex != skinIndex) {\r\n            this.currentSkinIndex = skinIndex;\r\n            this.playerSkinSprite.spriteFrame = SkinMgr.instance.getSkinSpriteFrame(skinIndex);\r\n        }\r\n    },\r\n});\r\n"]}